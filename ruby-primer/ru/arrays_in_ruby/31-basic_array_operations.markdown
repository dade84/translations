# 3.1 Основные операции с массивом #

## Преобразование массивов ##

Сейчас перейдем к более интересным вещам, но с небольшим советом от меня сначало. Попробуйте выполнить это:

	[1, 2, 3, 4, 5].map { |i| i + 1 }

Вы увидите на выходе, [2, 3, 4, 5, 6] результат применения кода внутри фигурных скобок для каждого простого элемента массива. Результат совершенно новый массив, содержащий этот результат. В Ruby, метод map используется для преобразования содержимого массива, согласно указанному множеству правил определенных внутри блока кода. Продолжаем, вы пробуете это. Умножить каждый элемент массива ниже на 3 чтобы получить [3, 6 .. 15].

	[1, 2, 3, 4, 5].map{|i| i * 3}

Ruby задает псевдоним методу Array#map метод Array#collect; их можно использовать поочередно(взаимозаменямые). Синтаксис Class#method стандартный способ обращения к Ruby методам и вы можете видеть его много раз в этой книге.

## Отбор элементов Array ##

Отбор элементов коллекции согласно логическому выражению очень распространенная операция в повседневном программировании. Ruby предоставляет довольно удобный метод select чтобы сделать этот процесс легче.

	[1, 2, 3, 4, 5, 6].select {|number| number % 2 == 0}

Метод select стандартный Ruby язык для отбора элементов. В следующем коде, попробуй извлечь строки, которые длиннее 5 символов.

	names = ['rock', 'paper', 'scissors', 'lizard', 'spock']
	names.select {|name| name.length > 5 }

## Удаление элементов ##

Одна из причин популярности Ruby среди разработчиков в его интуитивном API. Большую часть времени ты можешь догадываться об имени метода, который будет выполнять задачу которую вы задумали. Попробуй догадаться о методе, который тебе необходимо использоваться чтобы удалить элмент '5' из массива данного ниже:

	[1, 3, 5, 4, 6, 7]
	[1, 3, 5, 4, 6, 7].delete(5)

Я предполагаю это было легко.  Что если вы хотите удалть все элементы меньше чем 4 из данного массива. Пример ниже, делает только это:

	[1,2,3,4,5,6,7].delete_if{|i| i < 4 }

Вы заметите что Ruby методы из нескольких слов разделяются символом нижнего подчеркивания ( _ ). Это соглашение называется 'snake_casing' потому что a_longer_method_looks_kind_of_like_a_snake.


Ладно! Время для практики. Удалите все четные числа из массива данного ниже.

	[1,2,3,4,5,6,7,8,9].delete_if{|i| i%2 == 0}

Делая это в языках, таких как C или Java это займет у вас много строк кода. Красота Ruby в его кратком и читаемом коде.

