# 2.2 Циклы в Ruby #

## Циклы в Ruby ##

Циклы это программная конструкция которая позволяет повторить действие произвольное число раз.

Методы Array#each, Array#select и т.д. наиболее часто используемые циклы поскольку основное использование циклов это перебор или разложение в ряд коллекции, что-то мы изучим в главе "Массивы в Ruby".

Здесь мы охватим 2 основные циклические конструкции, которые вы можете использовать для решения большинства требований организации циклов, которые могут возникнуть.

## Бесконечные циклы ##

Бесконечные циклы выполняются до тех пох пока вы явно не скажете им остановиться. Синтаксически он самые простейшие для написания.
Вот один из них:

	loop do
	  puts "this line will be executed for an infinite amount of time"
	end

В примере выше нет завершающего условия и следовательно будет выполняться до тех пор пока процесс не остановиться. Цикл может быть остановлен изнутки командой break.

Сейчас напишем бесконечный цикл где монах будет медитировать до тех пор пока он не достигнет Нирваны. Используй оператор break один раз чтобы достигнуть Нирваны.

	loop do
	  monk.nirvana? ? break : monk.meditate
	end

## Запуск блока кода N раз ##

Скажем N это 5. Давайте представим как это может выглядеть.

	5.times do
	  # do the stuff that needs to be done
	end

Хорошо, мы представили это правильно. Это так легко!

Здесь для тебя задача, чтобы проверить твои вновь изученные навыки в организации циклов. За пределами нашего монастыря у нас есть колокол, в который люди могут звонить сколько им нужно. Напишите метод, который может звонить N раз, где N это параметр переданный методу.

	def ring(bell,n)
	  n.times do
	    bell.ring
	  end
	end

Мы только поверхностно изложили различные способы в которых Ruby позволяет писать циклы. Тем не менее, этого должно быть достаточноо для наиболее часто используемых случаев. Дайте нам знать если вам нужно больше!
	  
 


