# 7.1 Lambdas в Ruby #

## Lambdas ##

Возможно вы слышали о lamdas ранее. Возможно вы использовали их в других языках.Несмотря на причудливое имя, lambda это просто функция...исключительно без имени. Это анонимные, маленькие функциональные шпионы, тайно действующие в интересах твоего кода. Lamdas в Ruby также объекты, также как и все остальное! Последнее выражение lambda является результирующим значением, так же как и обычне функции. Как скучно и знакомо все это звучит, но это дает нам много мощи.

Как и у объектов у lambdas есть методы и они могут присваиваться переменым. Давайте попробуем!

	l = lamda { "Do or do not" }
	puts l.call

Здорово. Заметим, что наша заранее оправдывающаяся строка возвращает значение lambda-ы которое мы видим выводы на экран, используя puts. Сейчас пока это является привлекательной строкой, возможно нам захочется вернуть что-то более интересное. Lamdas принимает параметры, заключаемые в вертикальные черточки.


	l = lamda do |string|
	  if string == "try"
	    return "There's no such thing"
	  else
	    return "Do or do not."
	  end
	end
	puts l.call("try")
 
Даже лучше. Заметим то, что мы заменили {} в которые обернута lambda с do..end. Оба работают одинаково хорошо, но по соглашению, которому следует Ruby использовать {} для единственной lambda строки и do..end для многострочной lambda строки.

Сейчас двигаясь дальше, добавим lambda в следующих код, который увеличивает любое переданное число на 1.

	Increment = lamda {|number| number.next}

