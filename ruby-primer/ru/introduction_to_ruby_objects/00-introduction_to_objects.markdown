# 0.0 Введение в Объекты #

## Все является объектом ##

Мы начнем наше путешествие с объектов.
В Ruby, так же, как и в реальной жизни, наш мир заполнен объектами. 

Чтобы добиться результатов, используя Ruby, каждый всегда ставит себя на место объекта, а затем общается с другими объектами, говоря им, что им необходимо сделать.

Ролевая игра как объекта в твоей программе является неотъемлемой частью объектно-ориентированного программирования. Чтобы узнать каким объектом ты сейчас являешья можно использовать ключевое слово self.

Попробуйте сами:

	irb> self
	=> main

Как вы можете видеть, если вы не указываете, каким объектом вы являетесь, вы автоматически играете роль main яобъекта это то, что Ruby предоставляет нам по умолчанию.
Мы углубимся в то, как можно играть роли различных объектов и почему это полезно, чуть позже.


## Общение с объектами  ##

Один объект взаимодействует с другим, используя то, что называют methods. Более конкретно, один объект вызывает методы другого объекта.
В примере ниже, мы вызываем метод even? объекта, который является числом 2 поместив точку (.) после объекта, затем добавить имя метода, который мы хотим вызвать.

	2.even?

Вызов метода объекта, неминуемо генерирует ответ. Этот ответ всегда является другим объектом. Вызов метода next объекта 1, дает нам неследующее последовательное значение 2.

Можно также построить цепочку вызовов метода просто добавив больше точек и имена методов последовательно - каждый метод в цепочке вызывается над результатом предыдущего метода. Идите и попробуйте вызвать next объекта 1, чтобы получить число 3.

	irb> 1.next.next
	=> 3

Результаты на которые вы смотрите, являются следствием проведения серии тестов, напротив ввода для подтверждения. Если вы видите результаты красного цвета, это означает, что один из тестов провалился. Зеленый означает вы прошли.


	



