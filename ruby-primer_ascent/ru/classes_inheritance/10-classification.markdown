# 1.0 Классификация #

## A quick recap ##

Мы уже рассмотри основы в нашей introduction to classes in Ruby. Вот краткий обзор:

* Классы действуют как шаблоны для создания объектов, с указанием их состояния и поведения
* Объект созданный на основе класса называется экземпляром этого класса
* Сам класс является объектом, экземпляром класса Class

## Это вещь? ##

Когда говорим об объектах, мы часто укорачиваем "этот объект является экземпляром класса User" в "это User". Насколько нам известно, оба предложения означают одно и тоже и фраза "is a" является эквивалентом "instance of".

Больше того, на самом деле Ruby предоставляет нам методы называемый just that. Посмотрите на пример.

	puts "A String".is_a?(String)
	puts 1.is_a?(String)

Как вы уже возможно предположили, Object#is_a? принимает простой параметр - класс. У Object#is_a? есть псевдоним Object#kind_of? Они одинаковы во все таким образом вы можете выбрать любой, который читается лучше в заданном контексте.

Вот пример, который требует от вас объединить Object#is_a? с чем-то что вы уже изучили о классах. Как всегда ваша задача пройти все тесте.

	def know_it_all(object)
	  object.class
	end



